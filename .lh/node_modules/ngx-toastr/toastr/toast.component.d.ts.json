{
    "sourceFile": "node_modules/ngx-toastr/toastr/toast.component.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1700148895837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700148911689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,5 +53,6 @@\n     outsideTimeout(func: () => any, timeout: number): void;\n     outsideInterval(func: () => any, timeout: number): void;\n     private runInsideAngular;\n     static ɵfac: i0.ɵɵFactoryDeclaration<Toast<any>, never>;\n+    static ɵcmp: i0.ɵɵComponentDeclaration<Toast<any>, \"[toast-component]\", never, {}, {}, never, never, true, never>;\n }\n"
                }
            ],
            "date": 1700148895837,
            "name": "Commit-0",
            "content": "import { NgZone, OnDestroy } from '@angular/core';\nimport { IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastrService } from './toastr.service';\nimport * as i0 from \"@angular/core\";\nexport declare class Toast<ConfigPayload = any> implements OnDestroy {\n    protected toastrService: ToastrService;\n    toastPackage: ToastPackage;\n    protected ngZone?: NgZone;\n    message?: string | null;\n    title?: string;\n    options: IndividualConfig<ConfigPayload>;\n    duplicatesCount: number;\n    originalTimeout: number;\n    /** width of progress bar */\n    width: number;\n    /** a combination of toast type and options.toastClass */\n    toastClasses: string;\n    /** controls animation */\n    state: {\n        value: 'inactive' | 'active' | 'removed';\n        params: {\n            easeTime: number | string;\n            easing: string;\n        };\n    };\n    /** hides component when waiting to be displayed */\n    get displayStyle(): string | undefined;\n    private timeout;\n    private intervalId;\n    private hideTime;\n    private sub;\n    private sub1;\n    private sub2;\n    private sub3;\n    constructor(toastrService: ToastrService, toastPackage: ToastPackage, ngZone?: NgZone);\n    ngOnDestroy(): void;\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast(): void;\n    /**\n     * updates progress bar width\n     */\n    updateProgress(): void;\n    resetTimeout(): void;\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove(): void;\n    tapToast(): void;\n    stickAround(): void;\n    delayedHideToast(): void;\n    outsideTimeout(func: () => any, timeout: number): void;\n    outsideInterval(func: () => any, timeout: number): void;\n    private runInsideAngular;\n    static ɵfac: i0.ɵɵFactoryDeclaration<Toast<any>, never>;\n}\n"
        }
    ]
}